"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EMOJI_SEQUENCE = exports.EMOJI_ZWJ_SEQUENCE = exports.ZWJ = exports.EMOJI_ZWJ_ELEMENT = exports.EMOJI_CORE_SEQUENCE = exports.EMOJI_KEYCAP_SEQUENCE = exports.EMOJI_TAG_SEQUENCE = exports.TAG_END = exports.TAG_SPEC = exports.TAG_BASE = exports.EMOJI_FLAG_SEQUENCE = exports.REGIONAL_INDICATOR = exports.EMOJI_MODIFIER_SEQUENCE = exports.EMOJI_MODIFIER_BASE = exports.EMOJI_MODIFIER = exports.EMOJI_PRESENTATION_SEQUENCE = exports.EMOJI_PRESENTATION_SELECTOR = exports.TEXT_PRESENTATION_SEQUENCE = exports.TEXT_PRESENTATION_SELECTOR = exports.DEFAULT_TEXT_PRESENTATION_CHARACTER = exports.DEFAULT_EMOJI_PRESENTATION_CHARACTER = exports.EMOJI_CHARACTER = void 0;
function regex({ raw: texts }, ...insertions) {
    const derivedFlags = new Set();
    const regex1 = [];
    for (let i = 0; i < insertions.length; i++) {
        const insertion = insertions[i];
        [
            ...insertion.flags
        ].forEach((flag) => derivedFlags.add(flag));
        regex1.push(texts[i], `(?:${insertion.source})`);
    }
    regex1.push(texts[texts.length - 1]);
    return (flags) => {
        if (!flags) {
            flags = [
                ...derivedFlags
            ].join("");
        }
        return new RegExp(regex1.join(""), flags);
    };
}
const EMOJI_CHARACTER1 = /\p{Emoji}/u;
exports.EMOJI_CHARACTER = EMOJI_CHARACTER1;
const DEFAULT_EMOJI_PRESENTATION_CHARACTER1 = /\p{Emoji_Presentation}/u;
exports.DEFAULT_EMOJI_PRESENTATION_CHARACTER = DEFAULT_EMOJI_PRESENTATION_CHARACTER1;
const DEFAULT_TEXT_PRESENTATION_CHARACTER1 = /\P{Emoji_Presentation}/u;
exports.DEFAULT_TEXT_PRESENTATION_CHARACTER = DEFAULT_TEXT_PRESENTATION_CHARACTER1;
const TEXT_PRESENTATION_SELECTOR1 = /\u{FE0E}/u;
exports.TEXT_PRESENTATION_SELECTOR = TEXT_PRESENTATION_SELECTOR1;
const TEXT_PRESENTATION_SEQUENCE1 = regex `${EMOJI_CHARACTER1}${TEXT_PRESENTATION_SELECTOR1}`();
exports.TEXT_PRESENTATION_SEQUENCE = TEXT_PRESENTATION_SEQUENCE1;
const EMOJI_PRESENTATION_SELECTOR1 = /\u{FE0F}/u;
exports.EMOJI_PRESENTATION_SELECTOR = EMOJI_PRESENTATION_SELECTOR1;
const EMOJI_PRESENTATION_SEQUENCE1 = regex `${EMOJI_CHARACTER1}${EMOJI_PRESENTATION_SELECTOR1}`();
exports.EMOJI_PRESENTATION_SEQUENCE = EMOJI_PRESENTATION_SEQUENCE1;
const EMOJI_MODIFIER1 = /\p{Emoji_Modifier}/u;
exports.EMOJI_MODIFIER = EMOJI_MODIFIER1;
const EMOJI_MODIFIER_BASE1 = /\p{Emoji_Modifier_Base}/u;
exports.EMOJI_MODIFIER_BASE = EMOJI_MODIFIER_BASE1;
const EMOJI_MODIFIER_SEQUENCE1 = regex `${EMOJI_MODIFIER_BASE1}${EMOJI_MODIFIER1}`();
exports.EMOJI_MODIFIER_SEQUENCE = EMOJI_MODIFIER_SEQUENCE1;
const REGIONAL_INDICATOR1 = /\p{Regional_Indicator}/u;
exports.REGIONAL_INDICATOR = REGIONAL_INDICATOR1;
const EMOJI_FLAG_SEQUENCE1 = regex `${REGIONAL_INDICATOR1}${REGIONAL_INDICATOR1}`();
exports.EMOJI_FLAG_SEQUENCE = EMOJI_FLAG_SEQUENCE1;
const TAG_BASE1 = regex `${EMOJI_PRESENTATION_SEQUENCE1}|${EMOJI_MODIFIER_SEQUENCE1}|${EMOJI_CHARACTER1}`();
exports.TAG_BASE = TAG_BASE1;
const TAG_SPEC1 = /[\u{E0020}-\u{E007E}]+/u;
exports.TAG_SPEC = TAG_SPEC1;
const TAG_END1 = /\u{E007F}/u;
exports.TAG_END = TAG_END1;
const EMOJI_TAG_SEQUENCE1 = regex `${TAG_BASE1}${TAG_SPEC1}${TAG_END1}`();
exports.EMOJI_TAG_SEQUENCE = EMOJI_TAG_SEQUENCE1;
const EMOJI_KEYCAP_SEQUENCE1 = /[0-9#*]\u{FE0F}\u{20E3}/u;
exports.EMOJI_KEYCAP_SEQUENCE = EMOJI_KEYCAP_SEQUENCE1;
const EMOJI_CORE_SEQUENCE1 = regex `${EMOJI_FLAG_SEQUENCE1}|${EMOJI_MODIFIER_SEQUENCE1}|${EMOJI_KEYCAP_SEQUENCE1}|${EMOJI_PRESENTATION_SEQUENCE1}`();
exports.EMOJI_CORE_SEQUENCE = EMOJI_CORE_SEQUENCE1;
const EMOJI_ZWJ_ELEMENT1 = regex `${EMOJI_MODIFIER_SEQUENCE1}|${EMOJI_PRESENTATION_SEQUENCE1}|${EMOJI_CHARACTER1}`();
exports.EMOJI_ZWJ_ELEMENT = EMOJI_ZWJ_ELEMENT1;
const ZWJ1 = /\u{200d}/u;
exports.ZWJ = ZWJ1;
const EMOJI_ZWJ_SEQUENCE1 = regex `${EMOJI_ZWJ_ELEMENT1}(?:${ZWJ1}${EMOJI_ZWJ_ELEMENT1})+`();
exports.EMOJI_ZWJ_SEQUENCE = EMOJI_ZWJ_SEQUENCE1;
const EMOJI_SEQUENCE1 = regex `${EMOJI_TAG_SEQUENCE1}|${EMOJI_ZWJ_SEQUENCE1}|${EMOJI_CORE_SEQUENCE1}`();
exports.EMOJI_SEQUENCE = EMOJI_SEQUENCE1;
